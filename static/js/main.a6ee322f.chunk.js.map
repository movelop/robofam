{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","useState","setRobots","setSearchfield","useEffect","fetch","then","response","json","users","console","log","filterRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAiBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GAE3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WAErD,gCACC,6BAAKL,IACL,4BAAIC,WCYQK,EApBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAClB,OACC,8BAEGA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCWIC,EAjBG,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAChC,OAEE,8BACC,uBACAV,UAAU,0CACVW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCFDI,G,MARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACEJ,EAAMK,aCyCKC,EAvCH,WAAO,IAAD,EAGUC,mBAAS,IAHnB,mBAGXlB,EAHW,KAGHmB,EAHG,OAIoBD,mBAAS,IAJ7B,mBAIXb,EAJW,KAIEe,EAJF,KAOlBC,qBAAU,WACTC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAUP,EAAWO,MAC3BC,QAAQC,QACP,IAEF,IAIOC,EAAe7B,EAAO8B,QAAO,SAAAC,GAClC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAErD,OAAQhC,EAAOkC,OAGb,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,qBACA,cAAC,EAAD,CAAWU,aAZM,SAAC6B,GACtBf,EAAgBe,EAAMC,OAAOC,UAYzB,cAAC,EAAD,UACA,cAAC,EAAD,CAAUrC,OAAQ6B,SANpB,oBAAIjC,UAAU,KAAd,yBCjBW0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a6ee322f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name, email, id})=>{\r\n\t\r\n\treturn(\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n\t\t\r\n\t\t<div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{email}</p>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({robots})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t{\r\n  \t\t\trobots.map((user, i) =>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t \tkey={i}\r\n\t\t\t\t \tid={robots[i].id} \r\n\t\t\t\t \tname={robots[i].name} \r\n\t\t\t\t \temail={robots[i].email}\r\n\t\t\t\t \t/>\r\n\t\t\t\t \t);\r\n\t\t\t\t})\r\n  \t\t}\r\n  \t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange})=>{\r\n\treturn(\r\n\t\t\r\n\t\t\t<div >\r\n\t\t\t\t<input \r\n\t\t\t\tclassName=\"tc br3 pa3 ba b--green bg-lightest-blue\"\r\n\t\t\t\ttype=\"search\" \r\n\t\t\t\tplaceholder=\"Search Robots\"\r\n\t\t\t\tonChange = {searchChange}\r\n\t\t\t\t />\r\n\t\t\t</div>\r\n\t\t\r\n\t\t);\r\n}\r\n\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY:'scroll', border:'5px solid black', height:'600px'}} >\r\n\t\t\t{props.children}\r\n\t\t</div>\t\r\n\t\t);\r\n};\r\n\r\nexport default Scroll; ","import React, { useState,useEffect} from 'react';\r\nimport CardList from '../component/CardList';\r\nimport SearchBox from '../component/SearchBox.js';\r\nimport './App.css';\r\nimport Scroll from '../component/Scroll';\r\n\r\n\r\nconst App = () => {\r\n\t\r\n\r\nconst [robots, setRobots] = useState([]);\r\nconst [searchfield, setSearchfield] = useState('');\r\n\r\n\r\nuseEffect(()=>{\r\n\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => {setRobots( users)});\r\n\t\tconsole.log();\r\n}, []) \r\n\r\n\tconst onSearchChange =(event) =>{\r\n\t\tsetSearchfield( event.target.value );\r\n\t\t\r\n\t}\r\n\t\tconst filterRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\t\treturn !robots.length?\r\n\t\t\t <h1 className=\"tc\">Loading...</h1> :\r\n\t\t\t (\r\n\t\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t\t<h1 className=\"f1\">RoboFam</h1>\r\n\t\t\t\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots={filterRobots}/>\r\n\t\t\t\t\t\t</Scroll>\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t);\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n \t<React.StrictMode>\n  \t\t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}